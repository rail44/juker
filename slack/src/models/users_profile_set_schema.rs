/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// UsersProfileSetSchema : Schema for successful response from users.profile.set method



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UsersProfileSetSchema {
    #[serde(rename = "email_pending", skip_serializing_if = "Option::is_none")]
    pub email_pending: Option<String>,
    #[serde(rename = "ok")]
    pub ok: crate::models::DefsOkTrue,
    #[serde(rename = "profile")]
    pub profile: Box<crate::models::ObjsUserProfile>,
    #[serde(rename = "username")]
    pub username: String,
}

impl UsersProfileSetSchema {
    /// Schema for successful response from users.profile.set method
    pub fn new(ok: crate::models::DefsOkTrue, profile: crate::models::ObjsUserProfile, username: String) -> UsersProfileSetSchema {
        UsersProfileSetSchema {
            email_pending: None,
            ok,
            profile: Box::new(profile),
            username,
        }
    }
}


