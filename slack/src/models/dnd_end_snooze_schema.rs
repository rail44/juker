/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// DndEndSnoozeSchema : Schema for successful response from dnd.endSnooze method



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DndEndSnoozeSchema {
    #[serde(rename = "dnd_enabled")]
    pub dnd_enabled: bool,
    #[serde(rename = "next_dnd_end_ts")]
    pub next_dnd_end_ts: i32,
    #[serde(rename = "next_dnd_start_ts")]
    pub next_dnd_start_ts: i32,
    #[serde(rename = "ok")]
    pub ok: crate::models::DefsOkTrue,
    #[serde(rename = "snooze_enabled")]
    pub snooze_enabled: bool,
}

impl DndEndSnoozeSchema {
    /// Schema for successful response from dnd.endSnooze method
    pub fn new(dnd_enabled: bool, next_dnd_end_ts: i32, next_dnd_start_ts: i32, ok: crate::models::DefsOkTrue, snooze_enabled: bool) -> DndEndSnoozeSchema {
        DndEndSnoozeSchema {
            dnd_enabled,
            next_dnd_end_ts,
            next_dnd_start_ts,
            ok,
            snooze_enabled,
        }
    }
}


