/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObjsMessageAttachments {
    #[serde(rename = "fallback", skip_serializing_if = "Option::is_none")]
    pub fallback: Option<String>,
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "image_bytes", skip_serializing_if = "Option::is_none")]
    pub image_bytes: Option<i32>,
    #[serde(rename = "image_height", skip_serializing_if = "Option::is_none")]
    pub image_height: Option<i32>,
    #[serde(rename = "image_url", skip_serializing_if = "Option::is_none")]
    pub image_url: Option<String>,
    #[serde(rename = "image_width", skip_serializing_if = "Option::is_none")]
    pub image_width: Option<i32>,
}

impl ObjsMessageAttachments {
    pub fn new(id: i32) -> ObjsMessageAttachments {
        ObjsMessageAttachments {
            fallback: None,
            id,
            image_bytes: None,
            image_height: None,
            image_url: None,
            image_width: None,
        }
    }
}


