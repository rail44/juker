/*
 * Slack Web API
 *
 * One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.
 *
 * The version of the OpenAPI document: 1.7.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct ObjsFile {
    #[serde(rename = "channels", skip_serializing_if = "Option::is_none")]
    pub channels: Option<Vec<String>>,
    #[serde(rename = "comments_count", skip_serializing_if = "Option::is_none")]
    pub comments_count: Option<i32>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<i32>,
    #[serde(rename = "date_delete", skip_serializing_if = "Option::is_none")]
    pub date_delete: Option<i32>,
    #[serde(rename = "display_as_bot", skip_serializing_if = "Option::is_none")]
    pub display_as_bot: Option<bool>,
    #[serde(rename = "editable", skip_serializing_if = "Option::is_none")]
    pub editable: Option<bool>,
    #[serde(rename = "editor", skip_serializing_if = "Option::is_none")]
    pub editor: Option<String>,
    #[serde(rename = "external_id", skip_serializing_if = "Option::is_none")]
    pub external_id: Option<String>,
    #[serde(rename = "external_type", skip_serializing_if = "Option::is_none")]
    pub external_type: Option<String>,
    #[serde(rename = "external_url", skip_serializing_if = "Option::is_none")]
    pub external_url: Option<String>,
    #[serde(rename = "filetype", skip_serializing_if = "Option::is_none")]
    pub filetype: Option<String>,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<String>>,
    #[serde(rename = "has_rich_preview", skip_serializing_if = "Option::is_none")]
    pub has_rich_preview: Option<bool>,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "image_exif_rotation", skip_serializing_if = "Option::is_none")]
    pub image_exif_rotation: Option<i32>,
    #[serde(rename = "ims", skip_serializing_if = "Option::is_none")]
    pub ims: Option<Vec<String>>,
    #[serde(rename = "is_external", skip_serializing_if = "Option::is_none")]
    pub is_external: Option<bool>,
    #[serde(rename = "is_public", skip_serializing_if = "Option::is_none")]
    pub is_public: Option<bool>,
    #[serde(rename = "is_starred", skip_serializing_if = "Option::is_none")]
    pub is_starred: Option<bool>,
    #[serde(rename = "is_tombstoned", skip_serializing_if = "Option::is_none")]
    pub is_tombstoned: Option<bool>,
    #[serde(rename = "last_editor", skip_serializing_if = "Option::is_none")]
    pub last_editor: Option<String>,
    #[serde(rename = "mimetype", skip_serializing_if = "Option::is_none")]
    pub mimetype: Option<String>,
    #[serde(rename = "mode", skip_serializing_if = "Option::is_none")]
    pub mode: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "non_owner_editable", skip_serializing_if = "Option::is_none")]
    pub non_owner_editable: Option<bool>,
    #[serde(rename = "num_stars", skip_serializing_if = "Option::is_none")]
    pub num_stars: Option<i32>,
    #[serde(rename = "original_h", skip_serializing_if = "Option::is_none")]
    pub original_h: Option<i32>,
    #[serde(rename = "original_w", skip_serializing_if = "Option::is_none")]
    pub original_w: Option<i32>,
    #[serde(rename = "permalink", skip_serializing_if = "Option::is_none")]
    pub permalink: Option<String>,
    #[serde(rename = "permalink_public", skip_serializing_if = "Option::is_none")]
    pub permalink_public: Option<String>,
    #[serde(rename = "pinned_info", skip_serializing_if = "Option::is_none")]
    pub pinned_info: Option<serde_json::Value>,
    #[serde(rename = "pinned_to", skip_serializing_if = "Option::is_none")]
    pub pinned_to: Option<Vec<String>>,
    #[serde(rename = "pretty_type", skip_serializing_if = "Option::is_none")]
    pub pretty_type: Option<String>,
    #[serde(rename = "preview", skip_serializing_if = "Option::is_none")]
    pub preview: Option<String>,
    #[serde(rename = "public_url_shared", skip_serializing_if = "Option::is_none")]
    pub public_url_shared: Option<bool>,
    #[serde(rename = "reactions", skip_serializing_if = "Option::is_none")]
    pub reactions: Option<Vec<crate::models::ObjsReaction>>,
    #[serde(rename = "shares", skip_serializing_if = "Option::is_none")]
    pub shares: Option<Box<crate::models::ObjsFileShares>>,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "source_team", skip_serializing_if = "Option::is_none")]
    pub source_team: Option<String>,
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    #[serde(rename = "thumb_1024", skip_serializing_if = "Option::is_none")]
    pub thumb_1024: Option<String>,
    #[serde(rename = "thumb_1024_h", skip_serializing_if = "Option::is_none")]
    pub thumb_1024_h: Option<i32>,
    #[serde(rename = "thumb_1024_w", skip_serializing_if = "Option::is_none")]
    pub thumb_1024_w: Option<i32>,
    #[serde(rename = "thumb_160", skip_serializing_if = "Option::is_none")]
    pub thumb_160: Option<String>,
    #[serde(rename = "thumb_360", skip_serializing_if = "Option::is_none")]
    pub thumb_360: Option<String>,
    #[serde(rename = "thumb_360_h", skip_serializing_if = "Option::is_none")]
    pub thumb_360_h: Option<i32>,
    #[serde(rename = "thumb_360_w", skip_serializing_if = "Option::is_none")]
    pub thumb_360_w: Option<i32>,
    #[serde(rename = "thumb_480", skip_serializing_if = "Option::is_none")]
    pub thumb_480: Option<String>,
    #[serde(rename = "thumb_480_h", skip_serializing_if = "Option::is_none")]
    pub thumb_480_h: Option<i32>,
    #[serde(rename = "thumb_480_w", skip_serializing_if = "Option::is_none")]
    pub thumb_480_w: Option<i32>,
    #[serde(rename = "thumb_64", skip_serializing_if = "Option::is_none")]
    pub thumb_64: Option<String>,
    #[serde(rename = "thumb_720", skip_serializing_if = "Option::is_none")]
    pub thumb_720: Option<String>,
    #[serde(rename = "thumb_720_h", skip_serializing_if = "Option::is_none")]
    pub thumb_720_h: Option<i32>,
    #[serde(rename = "thumb_720_w", skip_serializing_if = "Option::is_none")]
    pub thumb_720_w: Option<i32>,
    #[serde(rename = "thumb_80", skip_serializing_if = "Option::is_none")]
    pub thumb_80: Option<String>,
    #[serde(rename = "thumb_800", skip_serializing_if = "Option::is_none")]
    pub thumb_800: Option<String>,
    #[serde(rename = "thumb_800_h", skip_serializing_if = "Option::is_none")]
    pub thumb_800_h: Option<i32>,
    #[serde(rename = "thumb_800_w", skip_serializing_if = "Option::is_none")]
    pub thumb_800_w: Option<i32>,
    #[serde(rename = "thumb_960", skip_serializing_if = "Option::is_none")]
    pub thumb_960: Option<String>,
    #[serde(rename = "thumb_960_h", skip_serializing_if = "Option::is_none")]
    pub thumb_960_h: Option<i32>,
    #[serde(rename = "thumb_960_w", skip_serializing_if = "Option::is_none")]
    pub thumb_960_w: Option<i32>,
    #[serde(rename = "thumb_tiny", skip_serializing_if = "Option::is_none")]
    pub thumb_tiny: Option<String>,
    #[serde(rename = "timestamp", skip_serializing_if = "Option::is_none")]
    pub timestamp: Option<i32>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "updated", skip_serializing_if = "Option::is_none")]
    pub updated: Option<i32>,
    #[serde(rename = "url_private", skip_serializing_if = "Option::is_none")]
    pub url_private: Option<String>,
    #[serde(rename = "url_private_download", skip_serializing_if = "Option::is_none")]
    pub url_private_download: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    #[serde(rename = "user_team", skip_serializing_if = "Option::is_none")]
    pub user_team: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
}

impl ObjsFile {
    pub fn new() -> ObjsFile {
        ObjsFile {
            channels: None,
            comments_count: None,
            created: None,
            date_delete: None,
            display_as_bot: None,
            editable: None,
            editor: None,
            external_id: None,
            external_type: None,
            external_url: None,
            filetype: None,
            groups: None,
            has_rich_preview: None,
            id: None,
            image_exif_rotation: None,
            ims: None,
            is_external: None,
            is_public: None,
            is_starred: None,
            is_tombstoned: None,
            last_editor: None,
            mimetype: None,
            mode: None,
            name: None,
            non_owner_editable: None,
            num_stars: None,
            original_h: None,
            original_w: None,
            permalink: None,
            permalink_public: None,
            pinned_info: None,
            pinned_to: None,
            pretty_type: None,
            preview: None,
            public_url_shared: None,
            reactions: None,
            shares: None,
            size: None,
            source_team: None,
            state: None,
            thumb_1024: None,
            thumb_1024_h: None,
            thumb_1024_w: None,
            thumb_160: None,
            thumb_360: None,
            thumb_360_h: None,
            thumb_360_w: None,
            thumb_480: None,
            thumb_480_h: None,
            thumb_480_w: None,
            thumb_64: None,
            thumb_720: None,
            thumb_720_h: None,
            thumb_720_w: None,
            thumb_80: None,
            thumb_800: None,
            thumb_800_h: None,
            thumb_800_w: None,
            thumb_960: None,
            thumb_960_h: None,
            thumb_960_w: None,
            thumb_tiny: None,
            timestamp: None,
            title: None,
            updated: None,
            url_private: None,
            url_private_download: None,
            user: None,
            user_team: None,
            username: None,
        }
    }
}


